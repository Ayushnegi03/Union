//Union
//Union: Join two subsets into a single subset. 
//Here first we have to check if the two subsets belong to same set.
var V, E;   
var edge; 
class Edge
{
    constructor()
    {
        this.SRC = 0;
        this.Dest = 0;
    }
};
function initialize(v,e)
{
    V = v;
    E = e;
    edge = Array.from(Array(E), () => Array());
}
function find(parent, i)
{
    if (parent[i] == -1)
        return i;         
    return find(parent,parent[i]);
}
function Union(parent, x, y)
{
    parent[x] = y;
}
function Cycle()
{
    var parent = Array(V).fill(0);
    for(var i = 0; i < V; ++i)
        parent[i] =- 1;
    for (var i = 0; i < E; ++i)
    {
        var x = find(parent,edge[i].SRC);
        var y = find(parent,edge[i].Dest);
        if (x == y)
            return 1;         
        Union(parent, x, y);
    }
    return 0;
}
var V = 3, E = 3;
initialize(V, E);
edge[0].SRC = 0;
edge[0].Dest = 1;
edge[1].SRC = 1;
edge[1].Dest = 2;
edge[2].SRC = 0;
edge[2].Dest = 2; 
if (Cycle() == 1)
    console.log("->Graph contains cycle");
else
    console.log("->Graph does not contains cycle");
//Output-
/* Let us create the following graph
      0
      | \
      |  \
      1---2 */
//->Graph contains cycle      
